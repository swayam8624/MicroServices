name: CI/CD Pipeline

on:
  push:
    paths:
      - 'user-service/**'
      - 'order-service/**'
      - '.github/workflows/ci.yml'

jobs:
  build-user-service:
    if: contains(github.event.head_commit.modified, 'user-service/') || contains(github.event.head_commit.added, 'user-service/') || contains(github.event.head_commit.removed, 'user-service/')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Build and Test User Service
      working-directory: ./user-service
      run: |
        mvn clean package
        
    - name: Build and Push Docker Image
      if: github.ref == 'refs/heads/main'
      run: |
        # Build Docker image
        docker build -t user-service:latest ./user-service
        docker tag user-service:latest ${{ secrets.DOCKER_USERNAME }}/user-service:${{ github.sha }}
        docker tag user-service:latest ${{ secrets.DOCKER_USERNAME }}/user-service:latest
        
        # Login to Docker Hub
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
        
        # Push images
        docker push ${{ secrets.DOCKER_USERNAME }}/user-service:${{ github.sha }}
        docker push ${{ secrets.DOCKER_USERNAME }}/user-service:latest

  build-order-service:
    if: contains(github.event.head_commit.modified, 'order-service/') || contains(github.event.head_commit.added, 'order-service/') || contains(github.event.head_commit.removed, 'order-service/')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Build and Test Order Service
      working-directory: ./order-service
      run: |
        mvn clean package
        
    - name: Build and Push Docker Image
      if: github.ref == 'refs/heads/main'
      run: |
        # Build Docker image
        docker build -t order-service:latest ./order-service
        docker tag order-service:latest ${{ secrets.DOCKER_USERNAME }}/order-service:${{ github.sha }}
        docker tag order-service:latest ${{ secrets.DOCKER_USERNAME }}/order-service:latest
        
        # Login to Docker Hub
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
        
        # Push images
        docker push ${{ secrets.DOCKER_USERNAME }}/order-service:${{ github.sha }}
        docker push ${{ secrets.DOCKER_USERNAME }}/order-service:latest
